# Dockerfile.prod

FROM node:20-alpine AS build

WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN npm install --frozen-lockfile

# Copy the application files
COPY . .

# Pass Firebase environment variables during build time
ARG NEXT_PUBLIC_API_KEY
ARG NEXT_PUBLIC_AUTH_DOMAIN
ARG NEXT_PUBLIC_PROJECT_ID
ARG NEXT_PUBLIC_STORAGE_BUCKET
ARG NEXT_PUBLIC_MESSAGING_SENDER_ID
ARG NEXT_PUBLIC_APP_ID

# Inject environment variables for Next.js build
ENV NEXT_PUBLIC_API_KEY=${NEXT_PUBLIC_API_KEY}
ENV NEXT_PUBLIC_AUTH_DOMAIN=${NEXT_PUBLIC_AUTH_DOMAIN}
ENV NEXT_PUBLIC_PROJECT_ID=${NEXT_PUBLIC_PROJECT_ID}
ENV NEXT_PUBLIC_STORAGE_BUCKET=${NEXT_PUBLIC_STORAGE_BUCKET}
ENV NEXT_PUBLIC_MESSAGING_SENDER_ID=${NEXT_PUBLIC_MESSAGING_SENDER_ID}
ENV NEXT_PUBLIC_APP_ID=${NEXT_PUBLIC_APP_ID}

# Debugging to confirm variable values
RUN echo "ðŸ”¥ BUILD-TIME ENV CHECK:"
RUN echo "API_KEY=$NEXT_PUBLIC_API_KEY"
RUN echo "AUTH_DOMAIN=$NEXT_PUBLIC_AUTH_DOMAIN"
RUN echo "PROJECT_ID=$NEXT_PUBLIC_PROJECT_ID"
RUN echo "STORAGE_BUCKET=$NEXT_PUBLIC_STORAGE_BUCKET"
RUN echo "MESSAGING_SENDER_ID=$NEXT_PUBLIC_MESSAGING_SENDER_ID"
RUN echo "APP_ID=$NEXT_PUBLIC_APP_ID"

# Build the Next.js app
RUN npm run build

# --- Production Stage ---
FROM node:20-alpine AS production

WORKDIR /app

# Copy build artifacts
COPY --from=build /app/.next ./.next
COPY --from=build /app/public ./public
COPY --from=build /app/package*.json ./

# Install production dependencies only
RUN npm install --production

# Pass env vars for runtime
ENV NEXT_PUBLIC_API_KEY=$NEXT_PUBLIC_API_KEY
ENV NEXT_PUBLIC_AUTH_DOMAIN=$NEXT_PUBLIC_AUTH_DOMAIN
ENV NEXT_PUBLIC_PROJECT_ID=$NEXT_PUBLIC_PROJECT_ID
ENV NEXT_PUBLIC_STORAGE_BUCKET=$NEXT_PUBLIC_STORAGE_BUCKET
ENV NEXT_PUBLIC_MESSAGING_SENDER_ID=$NEXT_PUBLIC_MESSAGING_SENDER_ID
ENV NEXT_PUBLIC_APP_ID=$NEXT_PUBLIC_APP_ID

# Debug environment variables at runtime
CMD ["sh", "-c", "echo 'ðŸ”¥ RUNTIME ENV CHECK:' && printenv | grep NEXT_PUBLIC && npm start"]
